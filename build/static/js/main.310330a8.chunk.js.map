{"version":3,"sources":["features/todo/todo-slice.js","components/Addtodo.js","components/Todo.js","components/Todos.js","components/layouts/Footer.js","components/TodoBoard.js","components/reducers/todoReducer.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","status","entities","id","title","desc","isActive","reducers","changeStatus","todos","action","map","todo","payload","delTodo","filter","addTodo","state","push","actions","Addtodo","dispatch","useDispatch","useState","todoTitle","setTodoTitle","todoDesc","setTodoDesc","className","onSubmit","e","preventDefault","Math","random","toString","substr","htmlFor","type","onChange","target","value","placeholder","maxLength","required","Todo","toggleTodoButton","toggleTodoIcon","toggleTodoText","toggleTodoDesc","toggleTodoArticle","toggleTodo","onClickArticle","onClick","test","Todos","todosRedux","useSelector","length","style","textAlign","Footer","href","TodoBoard","dispatchTodo","todoReducer","localTodo","localStorage","getItem","JSON","parse","App","useReducer","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.310330a8.chunk.js","sourcesContent":["// ducks pattern\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  status: 'idle',\n  entities: [{\n  id: 'ID',\n  title: 'todoTitle',\n  desc: 'todoDesc',\n  isActive: true,\n}]}\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    changeStatus: (todos, action) =>{\n        todos.entities = todos.entities.map(todo => (todo.id === action.payload.id\n        ? { ...todo, isActive: !todo.isActive }\n        : todo));\n    },\n    delTodo: (todos, action) => {\n      todos.entities = todos.entities.filter(todo => todo.id !== action.payload.id);\n    },\n    addTodo: (state, action) => {\n      const todo = action.payload\n      state.entities.push(todo)\n    }\n  }\n})\n\nexport const { addTodo, delTodo, changeStatus } = todoSlice.actions;\nexport default todoSlice.reducer;\n","import { useState } from 'react';\nimport { VscAdd } from 'react-icons/vsc';\nimport { useDispatch } from 'react-redux';\nimport '../style/Addtodo.scss';\nimport { addTodo } from '../features/todo/todo-slice'\n\nconst Addtodo = () => {\n  const dispatch = useDispatch()\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoDesc, setTodoDesc] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (todoTitle && todoDesc) {\n      const id = Math.random().toString(16).substr(2, 10);\n      const todo = {\n        id,\n        title: todoTitle,\n        desc: todoDesc,\n        isActive: true,\n      }\n      dispatch(addTodo(todo))\n      setTodoTitle('');\n      setTodoDesc('');\n    }\n  };\n\n  return (\n    <section className='form_add__container'>\n      <form className='form_add' onSubmit={onSubmit}>\n        <article className='form_add__input'>\n          <label htmlFor='title' className='form_add__label'>Title:</label>\n          <input type='text' id='title'\n          onChange={e => setTodoTitle(e.target.value)}\n          value={todoTitle} className='form_add__input__title'\n          placeholder='Type max 15 char.....'\n          maxLength='15'\n          required />\n          <label htmlFor='desc' className='form_add__label'>Description:</label>\n          <input type='text' id='desc'\n          onChange={e => setTodoDesc(e.target.value)}\n          value={todoDesc} className='form_add__input__desc'\n          placeholder='Type max 45 char.....'\n          maxLength='45'\n          required />\n        </article>\n        <button className='form_add__btn'>\n        <VscAdd className='form_add__btn__icon' />\n        Add\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Addtodo;\n","import { useDispatch } from 'react-redux';\nimport { delTodo, changeStatus} from '../features/todo/todo-slice'\nimport { FaTrashAlt } from 'react-icons/fa';\n\nconst Todo = ({ todo }) => {\n  const dispatch = useDispatch()\n  const toggleTodoButton = todo.isActive ? 'todo__btn' : 'todo__btn todo__btn--done';\n  const toggleTodoIcon = todo.isActive ? 'todo__btn__icon' : 'todo__btn__icon todo__btn__icon--done';\n  const toggleTodoText = todo.isActive ? 'todo__article__text__title' : 'todo__article__text__title todo__article__text--done';\n  const toggleTodoDesc = todo.isActive ? 'todo__article__text' : 'todo__article__text todo__article__text--done';\n  const toggleTodoArticle = todo.isActive ? 'todo__article' : 'todo__article todo__article--done';\n  const toggleTodo = todo.isActive ? 'todo' : 'todo todo--done';\n\n  const onClickArticle = () => {\n    dispatch(changeStatus(todo))\n  };\n\n  const onClickBtn = e => {\n    const targetClassDone = /done/.test(e.target.className);\n    if (targetClassDone) {\n      return dispatch(delTodo(todo))\n    }\n    return onClickArticle();\n  };\n\n  const onClickIcon = () => dispatch(delTodo(todo));\n\n  return (\n    <section className={toggleTodo}>\n      <article className={toggleTodoArticle} onClick={onClickArticle}>\n        <h3 className={toggleTodoText}>{todo.title}</h3>\n        <p className={toggleTodoDesc}>{todo.desc}</p>\n      </article>\n      <button\n        className={toggleTodoButton}\n        onClick={onClickBtn}>\n        <FaTrashAlt\n        className={toggleTodoIcon}\n        onClick={onClickIcon}/>\n      </button>\n    </section>\n  );\n};\n\nexport default Todo;\n","import { useSelector } from 'react-redux';\nimport Todo from './Todo';\n\nconst Todos = () => {\n  const todosRedux = useSelector(state => state.todoSlice.entities)\n\n// without redux\n// const Todos = ({ todos, dispatchTodo }) => {\n//     return (\n//         <div className='todos'>\n//           {todos.length > 0\n//             ? todos.map(todo => (\n//             <Todo key={todo.id} todo={todo}\n//             dispatchTodo={dispatchTodo} />))\n//             : <h3 style={{ textAlign: 'center' }}>There is no ToDo for today</h3>}\n//         </div>\n// )\n  return (\n    <div className='todos'>\n      {todosRedux.length > 0\n        ? todosRedux.map(todo => (\n        <Todo key={todo.id} todo={todo}\n        />))\n        : <h3 style={{ textAlign: 'center' }}>There is no ToDo for today</h3>}\n    </div>\n  )\n\n};\n\nexport default Todos;\n","import { GoMarkGithub } from 'react-icons/go';\n\nconst Footer = () => (\n    <footer className='footer'>\n      <a className='footer__link'\n      href='https://github.com/Tottzi/reduxtodo'\n      target='_blank'>\n        <GoMarkGithub className='footer__icon'/>\n      </a>\n    </footer>\n);\n\nexport default Footer;\n","import Addtodo from './Addtodo';\nimport Todos from './Todos';\nimport Footer from './layouts/Footer';\n\nconst TodoBoard = ({ todos, dispatchTodo }) => (\n    <div className='todoBoard'>\n      <Addtodo dispatchTodo={dispatchTodo} />\n      <Todos todos={todos}\n      dispatchTodo={dispatchTodo} />\n      <Footer />\n    </div>\n);\n\nexport default TodoBoard;\n","export const todoReducer = (todos, action) => {\n  switch (action.type) {\n    case 'CHANGE_STATUS':\n      return todos.map(todo => (todo.id === action.todo.id\n        ? { ...todo, isActive: !todo.isActive }\n        : todo));\n    case 'DEL_TODO':\n      return todos.filter(todo => todo.id !== action.todo.id);\n    case 'ADD_TODO':\n      return [...todos, action.todo];\n    default:\n      return todos;\n  }\n};\n\nexport default todoReducer;\n","import { useReducer, useEffect } from 'react';\nimport './style/App.scss';\nimport TodoBoard from './components/TodoBoard';\nimport { todoReducer } from './components/reducers/todoReducer';\n\n\nconst localTodo = localStorage.getItem('saltTodo') ? JSON.parse(localStorage.getItem('saltTodo')) : [];\n\nfunction App() {\n  const [todos, dispatchTodo] = useReducer(todoReducer, localTodo);\n\n  useEffect(() => {\n    localStorage.setItem('saltTodo', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"App\">\n      <TodoBoard todos={todos} dispatchTodo={dispatchTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore} from \"@reduxjs/toolkit\";\nimport todoSlice from '../features/todo/todo-slice'\n\nexport const store = configureStore({\n  reducer: { \n    todoSlice : todoSlice,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport todoReducer from './components/reducers/todoReducer'\nimport { store } from './app/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}